1 自己开发的插件的命名方式 <yourplugin>-maven-plugin
2 一个Java mojo由一个java文件组成，代表一个plugin的goal
3 详见 greeting-maven-plugin 
4 在使用 plugin的pom.xml中加入如下

	<build>
        <plugins>
            <plugin>
                <groupId>com.dong.org</groupId>
                <artifactId>greeting-maven-plugin</artifactId>
                <version>1.0-SNAPSHOT</version>
            </plugin>
        </plugins>
    </build>
4 可以运行 
	mvn com.dong.org:greeting-maven-plugin:1.0-SNAPSHOT:sayhi 
	mvn com.dong.org:greeting-maven-plugin:sayhi
	mvn greeting:sayhi
中的一个来执行goal

5 可以用户端的pom.xml中将插件的目标绑定到生命周期的指定阶段，见use-greetingPlugin pom.xml配置
6 可以运行下面的命令直接创建一个插件
	mvn archetype:generate \
  -DgroupId=sample.plugin \
  -DartifactId=hello-maven-plugin \
  -DarchetypeGroupId=org.apache.maven.archetypes \
  -DarchetypeArtifactId=maven-archetype-plugin
7 具体参考 https://maven.apache.org/guides/plugin/guide-java-plugin-development.html